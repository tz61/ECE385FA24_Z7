// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module render_2d_render_2d_Pipeline_render_enemy_bullets_render_enemy_bullets_x (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        select_ln166_1,
        shl_ln265_2_mid2,
        tile_fb_V_address0,
        tile_fb_V_ce0,
        tile_fb_V_we0,
        tile_fb_V_d0,
        tile_fb_V_address1,
        tile_fb_V_ce1,
        tile_fb_V_q1,
        tmp_19,
        select_ln166,
        tmp_bullet_V,
        bullet_sprite_V_address0,
        bullet_sprite_V_ce0,
        bullet_sprite_V_q0,
        bullet_sprite_V_address1,
        bullet_sprite_V_ce1,
        bullet_sprite_V_q1,
        bullet_sprite_V_address2,
        bullet_sprite_V_ce2,
        bullet_sprite_V_q2,
        bullet_sprite_V_address3,
        bullet_sprite_V_ce3,
        bullet_sprite_V_q3,
        tmp_9,
        tmp_bullet_V_1,
        tmp_10,
        tmp_bullet_V_2,
        tmp_11,
        tmp_bullet_V_3,
        tmp_12
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [3:0] select_ln166_1;
input  [8:0] shl_ln265_2_mid2;
output  [9:0] tile_fb_V_address0;
output   tile_fb_V_ce0;
output   tile_fb_V_we0;
output  [31:0] tile_fb_V_d0;
output  [9:0] tile_fb_V_address1;
output   tile_fb_V_ce1;
input  [31:0] tile_fb_V_q1;
input  [8:0] tmp_19;
input  [3:0] select_ln166;
input  [30:0] tmp_bullet_V;
output  [11:0] bullet_sprite_V_address0;
output   bullet_sprite_V_ce0;
input  [63:0] bullet_sprite_V_q0;
output  [11:0] bullet_sprite_V_address1;
output   bullet_sprite_V_ce1;
input  [63:0] bullet_sprite_V_q1;
output  [11:0] bullet_sprite_V_address2;
output   bullet_sprite_V_ce2;
input  [63:0] bullet_sprite_V_q2;
output  [11:0] bullet_sprite_V_address3;
output   bullet_sprite_V_ce3;
input  [63:0] bullet_sprite_V_q3;
input  [0:0] tmp_9;
input  [30:0] tmp_bullet_V_1;
input  [0:0] tmp_10;
input  [30:0] tmp_bullet_V_2;
input  [0:0] tmp_11;
input  [30:0] tmp_bullet_V_3;
input  [0:0] tmp_12;

reg ap_idle;
reg tile_fb_V_ce0;
reg tile_fb_V_we0;
reg tile_fb_V_ce1;
reg bullet_sprite_V_ce0;
reg bullet_sprite_V_ce1;
reg bullet_sprite_V_ce2;
reg bullet_sprite_V_ce3;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln182_fu_335_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [4:0] select_ln182_1_fu_374_p3;
reg   [4:0] select_ln182_1_reg_2485;
reg   [4:0] select_ln182_1_reg_2485_pp0_iter1_reg;
reg   [4:0] select_ln182_1_reg_2485_pp0_iter2_reg;
wire   [4:0] trunc_ln190_fu_428_p1;
reg   [4:0] trunc_ln190_reg_2490;
reg   [4:0] trunc_ln190_reg_2490_pp0_iter1_reg;
reg   [4:0] trunc_ln190_reg_2490_pp0_iter2_reg;
wire   [31:0] tmp_sprite_x_fu_498_p18;
reg   [31:0] tmp_sprite_x_reg_2495;
wire   [0:0] phitmp30_fu_592_p2;
reg   [0:0] phitmp30_reg_2500;
reg   [0:0] phitmp30_reg_2500_pp0_iter1_reg;
reg   [0:0] phitmp30_reg_2500_pp0_iter2_reg;
reg   [0:0] phitmp30_reg_2500_pp0_iter3_reg;
reg   [0:0] phitmp30_reg_2500_pp0_iter4_reg;
wire   [0:0] phitmp31_fu_618_p2;
reg   [0:0] phitmp31_reg_2505;
reg   [0:0] phitmp31_reg_2505_pp0_iter1_reg;
reg   [0:0] phitmp31_reg_2505_pp0_iter2_reg;
reg   [0:0] phitmp31_reg_2505_pp0_iter3_reg;
reg   [0:0] phitmp31_reg_2505_pp0_iter4_reg;
wire   [24:0] add_ln220_fu_650_p2;
reg   [24:0] add_ln220_reg_2510;
wire  signed [9:0] offset_x_fu_656_p2;
reg  signed [9:0] offset_x_reg_2515;
wire   [6:0] trunc_ln220_2_fu_666_p1;
reg   [6:0] trunc_ln220_2_reg_2521;
wire   [13:0] trunc_ln220_3_fu_670_p1;
reg   [13:0] trunc_ln220_3_reg_2526;
wire   [1:0] add_ln220_5_fu_678_p2;
reg   [1:0] add_ln220_5_reg_2531;
reg   [1:0] add_ln220_5_reg_2531_pp0_iter1_reg;
reg   [1:0] add_ln220_5_reg_2531_pp0_iter2_reg;
reg   [1:0] add_ln220_5_reg_2531_pp0_iter3_reg;
wire   [0:0] icmp_ln1039_fu_684_p2;
reg   [0:0] icmp_ln1039_reg_2536;
reg   [0:0] icmp_ln1039_reg_2536_pp0_iter1_reg;
reg   [0:0] icmp_ln1039_reg_2536_pp0_iter2_reg;
reg   [0:0] icmp_ln1039_reg_2536_pp0_iter3_reg;
reg   [0:0] icmp_ln1039_reg_2536_pp0_iter4_reg;
wire   [0:0] icmp_ln1039_4_fu_690_p2;
reg   [0:0] icmp_ln1039_4_reg_2541;
reg   [0:0] icmp_ln1039_4_reg_2541_pp0_iter1_reg;
reg   [0:0] icmp_ln1039_4_reg_2541_pp0_iter2_reg;
reg   [0:0] icmp_ln1039_4_reg_2541_pp0_iter3_reg;
reg   [0:0] icmp_ln1039_4_reg_2541_pp0_iter4_reg;
wire   [31:0] tmp_sprite_x_1_fu_744_p18;
reg   [31:0] tmp_sprite_x_1_reg_2546;
wire   [0:0] phitmp24_fu_838_p2;
reg   [0:0] phitmp24_reg_2551;
reg   [0:0] phitmp24_reg_2551_pp0_iter1_reg;
reg   [0:0] phitmp24_reg_2551_pp0_iter2_reg;
reg   [0:0] phitmp24_reg_2551_pp0_iter3_reg;
reg   [0:0] phitmp24_reg_2551_pp0_iter4_reg;
wire   [0:0] phitmp25_fu_864_p2;
reg   [0:0] phitmp25_reg_2556;
reg   [0:0] phitmp25_reg_2556_pp0_iter1_reg;
reg   [0:0] phitmp25_reg_2556_pp0_iter2_reg;
reg   [0:0] phitmp25_reg_2556_pp0_iter3_reg;
reg   [0:0] phitmp25_reg_2556_pp0_iter4_reg;
wire   [24:0] add_ln220_3_fu_892_p2;
reg   [24:0] add_ln220_3_reg_2561;
wire  signed [9:0] offset_x_2_fu_898_p2;
reg  signed [9:0] offset_x_2_reg_2566;
wire   [6:0] trunc_ln220_8_fu_908_p1;
reg   [6:0] trunc_ln220_8_reg_2572;
wire   [13:0] trunc_ln220_10_fu_912_p1;
reg   [13:0] trunc_ln220_10_reg_2577;
wire   [1:0] add_ln220_12_fu_920_p2;
reg   [1:0] add_ln220_12_reg_2582;
reg   [1:0] add_ln220_12_reg_2582_pp0_iter1_reg;
reg   [1:0] add_ln220_12_reg_2582_pp0_iter2_reg;
reg   [1:0] add_ln220_12_reg_2582_pp0_iter3_reg;
wire   [0:0] icmp_ln1039_5_fu_926_p2;
reg   [0:0] icmp_ln1039_5_reg_2587;
reg   [0:0] icmp_ln1039_5_reg_2587_pp0_iter1_reg;
reg   [0:0] icmp_ln1039_5_reg_2587_pp0_iter2_reg;
reg   [0:0] icmp_ln1039_5_reg_2587_pp0_iter3_reg;
reg   [0:0] icmp_ln1039_5_reg_2587_pp0_iter4_reg;
wire   [0:0] icmp_ln1039_6_fu_932_p2;
reg   [0:0] icmp_ln1039_6_reg_2592;
reg   [0:0] icmp_ln1039_6_reg_2592_pp0_iter1_reg;
reg   [0:0] icmp_ln1039_6_reg_2592_pp0_iter2_reg;
reg   [0:0] icmp_ln1039_6_reg_2592_pp0_iter3_reg;
reg   [0:0] icmp_ln1039_6_reg_2592_pp0_iter4_reg;
wire   [31:0] tmp_sprite_x_2_fu_986_p18;
reg   [31:0] tmp_sprite_x_2_reg_2597;
wire   [0:0] phitmp18_fu_1080_p2;
reg   [0:0] phitmp18_reg_2602;
reg   [0:0] phitmp18_reg_2602_pp0_iter1_reg;
reg   [0:0] phitmp18_reg_2602_pp0_iter2_reg;
reg   [0:0] phitmp18_reg_2602_pp0_iter3_reg;
reg   [0:0] phitmp18_reg_2602_pp0_iter4_reg;
wire   [0:0] phitmp19_fu_1106_p2;
reg   [0:0] phitmp19_reg_2607;
reg   [0:0] phitmp19_reg_2607_pp0_iter1_reg;
reg   [0:0] phitmp19_reg_2607_pp0_iter2_reg;
reg   [0:0] phitmp19_reg_2607_pp0_iter3_reg;
reg   [0:0] phitmp19_reg_2607_pp0_iter4_reg;
wire   [24:0] add_ln220_6_fu_1134_p2;
reg   [24:0] add_ln220_6_reg_2612;
wire  signed [9:0] offset_x_3_fu_1140_p2;
reg  signed [9:0] offset_x_3_reg_2617;
wire   [6:0] trunc_ln220_15_fu_1150_p1;
reg   [6:0] trunc_ln220_15_reg_2623;
wire   [13:0] trunc_ln220_17_fu_1154_p1;
reg   [13:0] trunc_ln220_17_reg_2628;
wire   [1:0] add_ln220_17_fu_1162_p2;
reg   [1:0] add_ln220_17_reg_2633;
reg   [1:0] add_ln220_17_reg_2633_pp0_iter1_reg;
reg   [1:0] add_ln220_17_reg_2633_pp0_iter2_reg;
reg   [1:0] add_ln220_17_reg_2633_pp0_iter3_reg;
wire   [0:0] icmp_ln1039_7_fu_1168_p2;
reg   [0:0] icmp_ln1039_7_reg_2638;
reg   [0:0] icmp_ln1039_7_reg_2638_pp0_iter1_reg;
reg   [0:0] icmp_ln1039_7_reg_2638_pp0_iter2_reg;
reg   [0:0] icmp_ln1039_7_reg_2638_pp0_iter3_reg;
reg   [0:0] icmp_ln1039_7_reg_2638_pp0_iter4_reg;
wire   [0:0] icmp_ln1039_8_fu_1174_p2;
reg   [0:0] icmp_ln1039_8_reg_2643;
reg   [0:0] icmp_ln1039_8_reg_2643_pp0_iter1_reg;
reg   [0:0] icmp_ln1039_8_reg_2643_pp0_iter2_reg;
reg   [0:0] icmp_ln1039_8_reg_2643_pp0_iter3_reg;
reg   [0:0] icmp_ln1039_8_reg_2643_pp0_iter4_reg;
wire   [31:0] tmp_sprite_x_3_fu_1228_p18;
reg   [31:0] tmp_sprite_x_3_reg_2648;
wire   [0:0] phitmp12_fu_1322_p2;
reg   [0:0] phitmp12_reg_2653;
reg   [0:0] phitmp12_reg_2653_pp0_iter1_reg;
reg   [0:0] phitmp12_reg_2653_pp0_iter2_reg;
reg   [0:0] phitmp12_reg_2653_pp0_iter3_reg;
reg   [0:0] phitmp12_reg_2653_pp0_iter4_reg;
reg   [0:0] phitmp12_reg_2653_pp0_iter5_reg;
wire   [0:0] phitmp13_fu_1348_p2;
reg   [0:0] phitmp13_reg_2658;
reg   [0:0] phitmp13_reg_2658_pp0_iter1_reg;
reg   [0:0] phitmp13_reg_2658_pp0_iter2_reg;
reg   [0:0] phitmp13_reg_2658_pp0_iter3_reg;
reg   [0:0] phitmp13_reg_2658_pp0_iter4_reg;
reg   [0:0] phitmp13_reg_2658_pp0_iter5_reg;
wire   [24:0] add_ln220_9_fu_1376_p2;
reg   [24:0] add_ln220_9_reg_2663;
wire  signed [9:0] offset_x_4_fu_1382_p2;
reg  signed [9:0] offset_x_4_reg_2668;
wire   [6:0] trunc_ln220_21_fu_1392_p1;
reg   [6:0] trunc_ln220_21_reg_2674;
wire   [13:0] trunc_ln220_22_fu_1396_p1;
reg   [13:0] trunc_ln220_22_reg_2679;
wire   [1:0] add_ln220_22_fu_1404_p2;
reg   [1:0] add_ln220_22_reg_2684;
reg   [1:0] add_ln220_22_reg_2684_pp0_iter1_reg;
reg   [1:0] add_ln220_22_reg_2684_pp0_iter2_reg;
reg   [1:0] add_ln220_22_reg_2684_pp0_iter3_reg;
reg   [1:0] add_ln220_22_reg_2684_pp0_iter4_reg;
wire   [0:0] icmp_ln1039_9_fu_1410_p2;
reg   [0:0] icmp_ln1039_9_reg_2689;
reg   [0:0] icmp_ln1039_9_reg_2689_pp0_iter1_reg;
reg   [0:0] icmp_ln1039_9_reg_2689_pp0_iter2_reg;
reg   [0:0] icmp_ln1039_9_reg_2689_pp0_iter3_reg;
reg   [0:0] icmp_ln1039_9_reg_2689_pp0_iter4_reg;
reg   [0:0] icmp_ln1039_9_reg_2689_pp0_iter5_reg;
wire   [0:0] icmp_ln1039_10_fu_1416_p2;
reg   [0:0] icmp_ln1039_10_reg_2694;
reg   [0:0] icmp_ln1039_10_reg_2694_pp0_iter1_reg;
reg   [0:0] icmp_ln1039_10_reg_2694_pp0_iter2_reg;
reg   [0:0] icmp_ln1039_10_reg_2694_pp0_iter3_reg;
reg   [0:0] icmp_ln1039_10_reg_2694_pp0_iter4_reg;
reg   [0:0] icmp_ln1039_10_reg_2694_pp0_iter5_reg;
reg   [0:0] tmp_reg_2699;
reg   [11:0] trunc_ln221_4_reg_2704;
reg   [11:0] trunc_ln221_5_reg_2709;
reg   [0:0] tmp_21_reg_2714;
reg   [11:0] trunc_ln221_7_reg_2719;
reg   [11:0] trunc_ln221_8_reg_2724;
reg   [0:0] tmp_27_reg_2729;
reg   [11:0] trunc_ln221_s_reg_2734;
reg   [11:0] trunc_ln221_2_reg_2739;
reg   [0:0] tmp_33_reg_2744;
reg   [11:0] trunc_ln221_6_reg_2749;
reg   [11:0] trunc_ln221_9_reg_2754;
reg   [9:0] tile_fb_V_addr_reg_2779;
reg   [9:0] tile_fb_V_addr_reg_2779_pp0_iter4_reg;
reg   [9:0] tile_fb_V_addr_reg_2779_pp0_iter5_reg;
reg   [63:0] bullet_sprite_V_load_reg_2785;
reg   [63:0] bullet_sprite_V_load_2_reg_2790;
reg   [63:0] bullet_sprite_V_load_3_reg_2795;
reg   [63:0] bullet_sprite_V_load_4_reg_2800;
reg   [63:0] bullet_sprite_V_load_4_reg_2800_pp0_iter4_reg;
reg   [31:0] tmp_pixel_V_6_reg_2805;
reg   [31:0] tmp_pixel_V_6_reg_2805_pp0_iter5_reg;
wire   [7:0] alpha_ch_V_fu_1822_p1;
reg   [7:0] alpha_ch_V_reg_2810;
wire   [63:0] r_V_fu_1837_p2;
reg   [63:0] r_V_reg_2815;
reg   [63:0] r_V_reg_2815_pp0_iter5_reg;
wire   [7:0] or_ln858_fu_1864_p2;
reg   [7:0] or_ln858_reg_2822;
wire   [7:0] alpha_ch_V_9_fu_1870_p3;
reg   [7:0] alpha_ch_V_9_reg_2827;
reg   [7:0] alpha_ch_V_9_reg_2827_pp0_iter5_reg;
wire   [0:0] icmp_ln1023_fu_1878_p2;
reg   [0:0] icmp_ln1023_reg_2833;
wire   [63:0] r_V_4_fu_1895_p2;
reg   [63:0] r_V_4_reg_2838;
reg   [63:0] r_V_4_reg_2838_pp0_iter5_reg;
wire   [0:0] trunc_ln221_1_fu_1900_p1;
reg   [0:0] trunc_ln221_1_reg_2845;
wire   [0:0] icmp_ln1023_2_fu_1922_p2;
reg   [0:0] icmp_ln1023_2_reg_2850;
wire   [63:0] r_V_5_fu_1939_p2;
reg   [63:0] r_V_5_reg_2855;
reg   [63:0] r_V_5_reg_2855_pp0_iter5_reg;
wire   [0:0] trunc_ln221_3_fu_1944_p1;
reg   [0:0] trunc_ln221_3_reg_2862;
wire   [0:0] icmp_ln1023_3_fu_1966_p2;
reg   [0:0] icmp_ln1023_3_reg_2867;
wire   [0:0] and_ln1023_4_fu_2002_p2;
reg   [0:0] and_ln1023_4_reg_2872;
wire   [7:0] alpha_ch_V_11_fu_2014_p3;
reg   [7:0] alpha_ch_V_11_reg_2877;
wire   [0:0] and_ln1023_9_fu_2050_p2;
reg   [0:0] and_ln1023_9_reg_2882;
wire   [7:0] alpha_ch_V_13_fu_2070_p3;
reg   [7:0] alpha_ch_V_13_reg_2888;
wire   [0:0] and_ln1023_14_fu_2107_p2;
reg   [0:0] and_ln1023_14_reg_2893;
wire   [31:0] or_ln186_1_fu_2197_p8;
reg   [31:0] or_ln186_1_reg_2898;
wire   [0:0] icmp_ln1023_4_fu_2215_p2;
reg   [0:0] icmp_ln1023_4_reg_2903;
wire   [31:0] zext_ln221_fu_1758_p1;
wire    ap_block_pp0_stage0;
wire   [31:0] zext_ln221_1_fu_1774_p1;
wire   [31:0] zext_ln221_2_fu_1790_p1;
wire   [31:0] zext_ln221_3_fu_1806_p1;
wire   [31:0] zext_ln190_fu_1817_p1;
reg   [5:0] l_fu_152;
wire   [5:0] add_ln185_fu_1422_p2;
wire    ap_loop_init;
reg   [5:0] ap_sig_allocacmp_l_load;
reg   [5:0] k_fu_156;
wire   [5:0] select_ln182_2_fu_382_p3;
reg   [5:0] ap_sig_allocacmp_k_2;
reg   [10:0] indvar_flatten6_fu_160;
wire   [10:0] add_ln182_fu_341_p2;
reg   [10:0] ap_sig_allocacmp_indvar_flatten6_load;
wire   [4:0] empty_fu_323_p1;
wire   [0:0] icmp_ln185_fu_350_p2;
wire   [5:0] add_ln182_2_fu_364_p2;
wire   [4:0] empty_49_fu_370_p1;
wire   [8:0] zext_ln182_fu_390_p1;
wire   [8:0] tmp_15_mid1_fu_400_p3;
wire   [8:0] tmp_s_fu_327_p3;
wire   [8:0] select_ln182_3_fu_408_p3;
wire   [5:0] select_ln182_fu_356_p3;
wire   [8:0] zext_ln185_fu_424_p1;
wire   [8:0] tmp_13_fu_438_p3;
wire   [3:0] tmp_sprite_width_fu_460_p17;
wire   [3:0] tmp_sprite_x_fu_498_p17;
wire   [3:0] tmp_sprite_y_fu_536_p17;
wire   [8:0] lhs_fu_574_p1;
wire   [31:0] tmp_sprite_width_fu_460_p18;
wire   [32:0] zext_ln186_1_fu_582_p1;
wire   [32:0] zext_ln186_fu_578_p1;
wire   [32:0] ret_V_fu_586_p2;
wire   [32:0] zext_ln196_fu_446_p1;
wire   [8:0] lhs_V_fu_598_p4;
wire   [32:0] zext_ln186_2_fu_608_p1;
wire   [32:0] ret_V_5_fu_612_p2;
wire   [32:0] zext_ln182_1_fu_416_p1;
wire   [31:0] tmp_sprite_y_fu_536_p18;
wire   [9:0] zext_ln182_2_fu_420_p1;
wire   [9:0] zext_ln220_fu_632_p1;
wire   [9:0] sub_ln220_fu_640_p2;
wire  signed [24:0] sext_ln220_fu_646_p1;
wire   [24:0] trunc_ln220_fu_636_p1;
wire   [9:0] zext_ln1496_fu_624_p1;
wire   [9:0] zext_ln218_fu_628_p1;
wire   [1:0] trunc_ln220_1_fu_662_p1;
wire   [1:0] trunc_ln220_4_fu_674_p1;
wire   [8:0] empty_50_fu_432_p2;
wire   [8:0] add_ln182_1_fu_394_p2;
wire   [3:0] tmp_sprite_width_1_fu_706_p17;
wire   [3:0] tmp_sprite_x_1_fu_744_p17;
wire   [3:0] tmp_sprite_y_1_fu_782_p17;
wire   [8:0] lhs_2_fu_820_p1;
wire   [31:0] tmp_sprite_width_1_fu_706_p18;
wire   [32:0] zext_ln186_4_fu_828_p1;
wire   [32:0] zext_ln186_3_fu_824_p1;
wire   [32:0] ret_V_11_fu_832_p2;
wire   [8:0] lhs_V_1_fu_844_p4;
wire   [32:0] zext_ln186_5_fu_854_p1;
wire   [32:0] ret_V_12_fu_858_p2;
wire   [31:0] tmp_sprite_y_1_fu_782_p18;
wire   [9:0] zext_ln220_1_fu_874_p1;
wire   [9:0] sub_ln220_1_fu_882_p2;
wire  signed [24:0] sext_ln220_3_fu_888_p1;
wire   [24:0] trunc_ln220_6_fu_878_p1;
wire   [9:0] zext_ln218_1_fu_870_p1;
wire   [1:0] trunc_ln220_7_fu_904_p1;
wire   [1:0] trunc_ln220_11_fu_916_p1;
wire   [3:0] tmp_sprite_width_2_fu_948_p17;
wire   [3:0] tmp_sprite_x_2_fu_986_p17;
wire   [3:0] tmp_sprite_y_2_fu_1024_p17;
wire   [8:0] lhs_3_fu_1062_p1;
wire   [31:0] tmp_sprite_width_2_fu_948_p18;
wire   [32:0] zext_ln186_7_fu_1070_p1;
wire   [32:0] zext_ln186_6_fu_1066_p1;
wire   [32:0] ret_V_13_fu_1074_p2;
wire   [8:0] lhs_V_2_fu_1086_p4;
wire   [32:0] zext_ln186_8_fu_1096_p1;
wire   [32:0] ret_V_14_fu_1100_p2;
wire   [31:0] tmp_sprite_y_2_fu_1024_p18;
wire   [9:0] zext_ln220_2_fu_1116_p1;
wire   [9:0] sub_ln220_2_fu_1124_p2;
wire  signed [24:0] sext_ln220_6_fu_1130_p1;
wire   [24:0] trunc_ln220_13_fu_1120_p1;
wire   [9:0] zext_ln218_2_fu_1112_p1;
wire   [1:0] trunc_ln220_14_fu_1146_p1;
wire   [1:0] trunc_ln220_18_fu_1158_p1;
wire   [3:0] tmp_sprite_width_3_fu_1190_p17;
wire   [3:0] tmp_sprite_x_3_fu_1228_p17;
wire   [3:0] tmp_sprite_y_3_fu_1266_p17;
wire   [8:0] lhs_4_fu_1304_p1;
wire   [31:0] tmp_sprite_width_3_fu_1190_p18;
wire   [32:0] zext_ln186_10_fu_1312_p1;
wire   [32:0] zext_ln186_9_fu_1308_p1;
wire   [32:0] ret_V_15_fu_1316_p2;
wire   [8:0] lhs_V_3_fu_1328_p4;
wire   [32:0] zext_ln186_11_fu_1338_p1;
wire   [32:0] ret_V_16_fu_1342_p2;
wire   [31:0] tmp_sprite_y_3_fu_1266_p18;
wire   [9:0] zext_ln220_3_fu_1358_p1;
wire   [9:0] sub_ln220_3_fu_1366_p2;
wire  signed [24:0] sext_ln220_9_fu_1372_p1;
wire   [24:0] trunc_ln220_19_fu_1362_p1;
wire   [9:0] zext_ln218_3_fu_1354_p1;
wire   [1:0] trunc_ln220_20_fu_1388_p1;
wire   [1:0] trunc_ln220_23_fu_1400_p1;
wire   [31:0] shl_ln4_fu_1443_p3;
wire   [13:0] trunc_ln220_5_fu_1453_p3;
wire   [31:0] add_ln220_1_fu_1460_p2;
wire  signed [31:0] sext_ln220_1_fu_1450_p1;
wire   [13:0] add_ln220_2_fu_1468_p2;
wire  signed [13:0] sext_ln220_2_fu_1465_p1;
wire   [31:0] sprite_addr_fu_1473_p2;
wire   [13:0] add_ln220_7_fu_1479_p2;
wire   [13:0] sub_ln221_fu_1493_p2;
wire   [31:0] shl_ln220_1_fu_1519_p3;
wire   [13:0] trunc_ln220_9_fu_1529_p3;
wire   [31:0] add_ln220_8_fu_1536_p2;
wire  signed [31:0] sext_ln220_4_fu_1526_p1;
wire   [13:0] add_ln220_10_fu_1544_p2;
wire  signed [13:0] sext_ln220_5_fu_1541_p1;
wire   [31:0] sprite_addr_1_fu_1549_p2;
wire   [13:0] add_ln220_13_fu_1555_p2;
wire   [13:0] sub_ln221_2_fu_1569_p2;
wire   [31:0] shl_ln220_2_fu_1595_p3;
wire   [13:0] trunc_ln220_s_fu_1605_p3;
wire   [31:0] add_ln220_14_fu_1612_p2;
wire  signed [31:0] sext_ln220_7_fu_1602_p1;
wire   [13:0] add_ln220_15_fu_1620_p2;
wire  signed [13:0] sext_ln220_8_fu_1617_p1;
wire   [31:0] sprite_addr_2_fu_1625_p2;
wire   [13:0] add_ln220_18_fu_1631_p2;
wire   [13:0] sub_ln221_4_fu_1645_p2;
wire   [31:0] shl_ln220_3_fu_1671_p3;
wire   [13:0] trunc_ln220_12_fu_1681_p3;
wire   [31:0] add_ln220_19_fu_1688_p2;
wire  signed [31:0] sext_ln220_10_fu_1678_p1;
wire   [13:0] add_ln220_20_fu_1696_p2;
wire  signed [13:0] sext_ln220_11_fu_1693_p1;
wire   [31:0] sprite_addr_3_fu_1701_p2;
wire   [13:0] add_ln220_23_fu_1707_p2;
wire   [13:0] sub_ln221_6_fu_1721_p2;
wire   [11:0] sub_ln221_1_fu_1747_p2;
wire   [11:0] select_ln221_fu_1752_p3;
wire   [11:0] sub_ln221_3_fu_1763_p2;
wire   [11:0] select_ln221_1_fu_1768_p3;
wire   [11:0] sub_ln221_5_fu_1779_p2;
wire   [11:0] select_ln221_2_fu_1784_p3;
wire   [11:0] sub_ln221_7_fu_1795_p2;
wire   [11:0] select_ln221_3_fu_1800_p3;
wire   [9:0] add_ln5_fu_1811_p3;
wire   [5:0] op2_assign_2_fu_1826_p3;
wire   [63:0] zext_ln1669_fu_1833_p1;
wire   [14:0] tmp_15_fu_1846_p4;
wire   [0:0] trunc_ln221_fu_1842_p1;
wire   [15:0] and_ln_fu_1856_p3;
wire   [5:0] op2_assign_4_fu_1884_p3;
wire   [63:0] zext_ln1669_2_fu_1891_p1;
wire   [14:0] tmp_22_fu_1904_p4;
wire   [15:0] and_ln1497_1_fu_1914_p3;
wire   [5:0] op2_assign_6_fu_1928_p3;
wire   [63:0] zext_ln1669_3_fu_1935_p1;
wire   [14:0] tmp_28_fu_1948_p4;
wire   [15:0] and_ln1497_3_fu_1958_p3;
wire   [0:0] and_ln1023_fu_1982_p2;
wire   [0:0] xor_ln1039_1_fu_1977_p2;
wire   [0:0] and_ln1023_2_fu_1992_p2;
wire   [0:0] xor_ln1039_fu_1972_p2;
wire   [0:0] and_ln1023_3_fu_1996_p2;
wire   [0:0] and_ln1023_1_fu_1986_p2;
wire   [7:0] alpha_ch_V_10_fu_2008_p3;
wire   [0:0] and_ln1023_5_fu_2030_p2;
wire   [0:0] xor_ln1039_3_fu_2025_p2;
wire   [0:0] and_ln1023_7_fu_2040_p2;
wire   [0:0] xor_ln1039_2_fu_2020_p2;
wire   [0:0] and_ln1023_8_fu_2044_p2;
wire   [0:0] and_ln1023_6_fu_2034_p2;
wire   [7:0] alpha_ch_V_12_fu_2056_p3;
wire   [7:0] or_ln858_1_fu_2064_p2;
wire   [0:0] and_ln1023_10_fu_2087_p2;
wire   [0:0] xor_ln1039_5_fu_2082_p2;
wire   [0:0] and_ln1023_12_fu_2097_p2;
wire   [0:0] xor_ln1039_4_fu_2077_p2;
wire   [0:0] and_ln1023_13_fu_2101_p2;
wire   [0:0] and_ln1023_11_fu_2091_p2;
wire   [5:0] op2_assign_8_fu_2121_p3;
wire   [63:0] zext_ln1669_4_fu_2128_p1;
wire   [63:0] r_V_6_fu_2132_p2;
wire   [14:0] tmp_34_fu_2141_p4;
wire   [0:0] trunc_ln221_10_fu_2137_p1;
wire   [7:0] alpha_ch_V_14_fu_2113_p3;
wire   [4:0] tmp_35_fu_2167_p4;
wire   [4:0] tmp_36_fu_2177_p4;
wire   [4:0] tmp_37_fu_2187_p4;
wire   [7:0] alpha_ch_V_15_fu_2159_p3;
wire   [15:0] and_ln1497_4_fu_2151_p3;
wire   [4:0] tmp_16_fu_2221_p4;
wire   [4:0] tmp_17_fu_2230_p4;
wire   [4:0] tmp_18_fu_2239_p4;
wire   [4:0] tmp_23_fu_2265_p4;
wire   [4:0] tmp_24_fu_2274_p4;
wire   [4:0] tmp_25_fu_2283_p4;
wire   [4:0] tmp_30_fu_2309_p4;
wire   [4:0] tmp_31_fu_2318_p4;
wire   [4:0] tmp_32_fu_2327_p4;
wire   [0:0] xor_ln1039_6_fu_2353_p2;
wire   [0:0] and_ln1023_15_fu_2363_p2;
wire   [0:0] and_ln1023_17_fu_2373_p2;
wire   [0:0] xor_ln1039_7_fu_2358_p2;
wire   [0:0] and_ln1023_18_fu_2377_p2;
wire   [0:0] and_ln1023_16_fu_2368_p2;
wire   [0:0] and_ln1023_19_fu_2383_p2;
wire   [31:0] or_ln186_7_fu_2336_p8;
wire   [31:0] or_ln186_s_fu_2292_p8;
wire   [31:0] or_ln186_2_fu_2248_p8;
wire   [0:0] or_ln1023_fu_2396_p2;
wire   [31:0] select_ln1023_fu_2389_p3;
wire   [31:0] select_ln1023_1_fu_2401_p3;
wire   [31:0] select_ln1023_2_fu_2412_p3;
wire   [0:0] or_ln1023_1_fu_2408_p2;
wire   [0:0] or_ln1023_3_fu_2426_p2;
wire   [31:0] or_ln1023_2_fu_2420_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_done_reg = 1'b0;
end

render_2d_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U2(
    .din0(32'd16),
    .din1(32'd16),
    .din2(32'd16),
    .din3(32'd8),
    .din4(32'd8),
    .din5(32'd8),
    .din6(32'd16),
    .din7(32'd16),
    .din8(32'd16),
    .din9(32'd16),
    .din10(32'd16),
    .din11(32'd16),
    .din12(32'd16),
    .din13(32'd16),
    .din14(32'd32),
    .din15(32'd32),
    .din16(tmp_sprite_width_fu_460_p17),
    .dout(tmp_sprite_width_fu_460_p18)
);

render_2d_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U3(
    .din0(32'd0),
    .din1(32'd16),
    .din2(32'd32),
    .din3(32'd48),
    .din4(32'd48),
    .din5(32'd56),
    .din6(32'd0),
    .din7(32'd16),
    .din8(32'd32),
    .din9(32'd48),
    .din10(32'd0),
    .din11(32'd16),
    .din12(32'd32),
    .din13(32'd48),
    .din14(32'd64),
    .din15(32'd96),
    .din16(tmp_sprite_x_fu_498_p17),
    .dout(tmp_sprite_x_fu_498_p18)
);

render_2d_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U4(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(32'd8),
    .din5(32'd8),
    .din6(32'd16),
    .din7(32'd16),
    .din8(32'd16),
    .din9(32'd16),
    .din10(32'd32),
    .din11(32'd32),
    .din12(32'd32),
    .din13(32'd32),
    .din14(32'd32),
    .din15(32'd32),
    .din16(tmp_sprite_y_fu_536_p17),
    .dout(tmp_sprite_y_fu_536_p18)
);

render_2d_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U5(
    .din0(32'd16),
    .din1(32'd16),
    .din2(32'd16),
    .din3(32'd8),
    .din4(32'd8),
    .din5(32'd8),
    .din6(32'd16),
    .din7(32'd16),
    .din8(32'd16),
    .din9(32'd16),
    .din10(32'd16),
    .din11(32'd16),
    .din12(32'd16),
    .din13(32'd16),
    .din14(32'd32),
    .din15(32'd32),
    .din16(tmp_sprite_width_1_fu_706_p17),
    .dout(tmp_sprite_width_1_fu_706_p18)
);

render_2d_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U6(
    .din0(32'd0),
    .din1(32'd16),
    .din2(32'd32),
    .din3(32'd48),
    .din4(32'd48),
    .din5(32'd56),
    .din6(32'd0),
    .din7(32'd16),
    .din8(32'd32),
    .din9(32'd48),
    .din10(32'd0),
    .din11(32'd16),
    .din12(32'd32),
    .din13(32'd48),
    .din14(32'd64),
    .din15(32'd96),
    .din16(tmp_sprite_x_1_fu_744_p17),
    .dout(tmp_sprite_x_1_fu_744_p18)
);

render_2d_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U7(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(32'd8),
    .din5(32'd8),
    .din6(32'd16),
    .din7(32'd16),
    .din8(32'd16),
    .din9(32'd16),
    .din10(32'd32),
    .din11(32'd32),
    .din12(32'd32),
    .din13(32'd32),
    .din14(32'd32),
    .din15(32'd32),
    .din16(tmp_sprite_y_1_fu_782_p17),
    .dout(tmp_sprite_y_1_fu_782_p18)
);

render_2d_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U8(
    .din0(32'd16),
    .din1(32'd16),
    .din2(32'd16),
    .din3(32'd8),
    .din4(32'd8),
    .din5(32'd8),
    .din6(32'd16),
    .din7(32'd16),
    .din8(32'd16),
    .din9(32'd16),
    .din10(32'd16),
    .din11(32'd16),
    .din12(32'd16),
    .din13(32'd16),
    .din14(32'd32),
    .din15(32'd32),
    .din16(tmp_sprite_width_2_fu_948_p17),
    .dout(tmp_sprite_width_2_fu_948_p18)
);

render_2d_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U9(
    .din0(32'd0),
    .din1(32'd16),
    .din2(32'd32),
    .din3(32'd48),
    .din4(32'd48),
    .din5(32'd56),
    .din6(32'd0),
    .din7(32'd16),
    .din8(32'd32),
    .din9(32'd48),
    .din10(32'd0),
    .din11(32'd16),
    .din12(32'd32),
    .din13(32'd48),
    .din14(32'd64),
    .din15(32'd96),
    .din16(tmp_sprite_x_2_fu_986_p17),
    .dout(tmp_sprite_x_2_fu_986_p18)
);

render_2d_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U10(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(32'd8),
    .din5(32'd8),
    .din6(32'd16),
    .din7(32'd16),
    .din8(32'd16),
    .din9(32'd16),
    .din10(32'd32),
    .din11(32'd32),
    .din12(32'd32),
    .din13(32'd32),
    .din14(32'd32),
    .din15(32'd32),
    .din16(tmp_sprite_y_2_fu_1024_p17),
    .dout(tmp_sprite_y_2_fu_1024_p18)
);

render_2d_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U11(
    .din0(32'd16),
    .din1(32'd16),
    .din2(32'd16),
    .din3(32'd8),
    .din4(32'd8),
    .din5(32'd8),
    .din6(32'd16),
    .din7(32'd16),
    .din8(32'd16),
    .din9(32'd16),
    .din10(32'd16),
    .din11(32'd16),
    .din12(32'd16),
    .din13(32'd16),
    .din14(32'd32),
    .din15(32'd32),
    .din16(tmp_sprite_width_3_fu_1190_p17),
    .dout(tmp_sprite_width_3_fu_1190_p18)
);

render_2d_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U12(
    .din0(32'd0),
    .din1(32'd16),
    .din2(32'd32),
    .din3(32'd48),
    .din4(32'd48),
    .din5(32'd56),
    .din6(32'd0),
    .din7(32'd16),
    .din8(32'd32),
    .din9(32'd48),
    .din10(32'd0),
    .din11(32'd16),
    .din12(32'd32),
    .din13(32'd48),
    .din14(32'd64),
    .din15(32'd96),
    .din16(tmp_sprite_x_3_fu_1228_p17),
    .dout(tmp_sprite_x_3_fu_1228_p18)
);

render_2d_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U13(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(32'd8),
    .din5(32'd8),
    .din6(32'd16),
    .din7(32'd16),
    .din8(32'd16),
    .din9(32'd16),
    .din10(32'd32),
    .din11(32'd32),
    .din12(32'd32),
    .din13(32'd32),
    .din14(32'd32),
    .din15(32'd32),
    .din16(tmp_sprite_y_3_fu_1266_p17),
    .dout(tmp_sprite_y_3_fu_1266_p18)
);

render_2d_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln182_fu_335_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten6_fu_160 <= add_ln182_fu_341_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten6_fu_160 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln182_fu_335_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            k_fu_156 <= select_ln182_2_fu_382_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            k_fu_156 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln182_fu_335_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            l_fu_152 <= add_ln185_fu_1422_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            l_fu_152 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln182_fu_335_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln220_12_reg_2582 <= add_ln220_12_fu_920_p2;
        add_ln220_17_reg_2633 <= add_ln220_17_fu_1162_p2;
        add_ln220_22_reg_2684 <= add_ln220_22_fu_1404_p2;
        add_ln220_3_reg_2561 <= add_ln220_3_fu_892_p2;
        add_ln220_5_reg_2531 <= add_ln220_5_fu_678_p2;
        add_ln220_6_reg_2612 <= add_ln220_6_fu_1134_p2;
        add_ln220_9_reg_2663 <= add_ln220_9_fu_1376_p2;
        add_ln220_reg_2510 <= add_ln220_fu_650_p2;
        icmp_ln1039_10_reg_2694 <= icmp_ln1039_10_fu_1416_p2;
        icmp_ln1039_4_reg_2541 <= icmp_ln1039_4_fu_690_p2;
        icmp_ln1039_5_reg_2587 <= icmp_ln1039_5_fu_926_p2;
        icmp_ln1039_6_reg_2592 <= icmp_ln1039_6_fu_932_p2;
        icmp_ln1039_7_reg_2638 <= icmp_ln1039_7_fu_1168_p2;
        icmp_ln1039_8_reg_2643 <= icmp_ln1039_8_fu_1174_p2;
        icmp_ln1039_9_reg_2689 <= icmp_ln1039_9_fu_1410_p2;
        icmp_ln1039_reg_2536 <= icmp_ln1039_fu_684_p2;
        offset_x_2_reg_2566 <= offset_x_2_fu_898_p2;
        offset_x_3_reg_2617 <= offset_x_3_fu_1140_p2;
        offset_x_4_reg_2668 <= offset_x_4_fu_1382_p2;
        offset_x_reg_2515 <= offset_x_fu_656_p2;
        phitmp12_reg_2653 <= phitmp12_fu_1322_p2;
        phitmp13_reg_2658 <= phitmp13_fu_1348_p2;
        phitmp18_reg_2602 <= phitmp18_fu_1080_p2;
        phitmp19_reg_2607 <= phitmp19_fu_1106_p2;
        phitmp24_reg_2551 <= phitmp24_fu_838_p2;
        phitmp25_reg_2556 <= phitmp25_fu_864_p2;
        phitmp30_reg_2500 <= phitmp30_fu_592_p2;
        phitmp31_reg_2505 <= phitmp31_fu_618_p2;
        select_ln182_1_reg_2485 <= select_ln182_1_fu_374_p3;
        tmp_sprite_x_1_reg_2546 <= tmp_sprite_x_1_fu_744_p18;
        tmp_sprite_x_2_reg_2597 <= tmp_sprite_x_2_fu_986_p18;
        tmp_sprite_x_3_reg_2648 <= tmp_sprite_x_3_fu_1228_p18;
        tmp_sprite_x_reg_2495 <= tmp_sprite_x_fu_498_p18;
        trunc_ln190_reg_2490 <= trunc_ln190_fu_428_p1;
        trunc_ln220_10_reg_2577 <= trunc_ln220_10_fu_912_p1;
        trunc_ln220_15_reg_2623 <= trunc_ln220_15_fu_1150_p1;
        trunc_ln220_17_reg_2628 <= trunc_ln220_17_fu_1154_p1;
        trunc_ln220_21_reg_2674 <= trunc_ln220_21_fu_1392_p1;
        trunc_ln220_22_reg_2679 <= trunc_ln220_22_fu_1396_p1;
        trunc_ln220_2_reg_2521 <= trunc_ln220_2_fu_666_p1;
        trunc_ln220_3_reg_2526 <= trunc_ln220_3_fu_670_p1;
        trunc_ln220_8_reg_2572 <= trunc_ln220_8_fu_908_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln220_12_reg_2582_pp0_iter1_reg <= add_ln220_12_reg_2582;
        add_ln220_17_reg_2633_pp0_iter1_reg <= add_ln220_17_reg_2633;
        add_ln220_22_reg_2684_pp0_iter1_reg <= add_ln220_22_reg_2684;
        add_ln220_5_reg_2531_pp0_iter1_reg <= add_ln220_5_reg_2531;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln1039_10_reg_2694_pp0_iter1_reg <= icmp_ln1039_10_reg_2694;
        icmp_ln1039_4_reg_2541_pp0_iter1_reg <= icmp_ln1039_4_reg_2541;
        icmp_ln1039_5_reg_2587_pp0_iter1_reg <= icmp_ln1039_5_reg_2587;
        icmp_ln1039_6_reg_2592_pp0_iter1_reg <= icmp_ln1039_6_reg_2592;
        icmp_ln1039_7_reg_2638_pp0_iter1_reg <= icmp_ln1039_7_reg_2638;
        icmp_ln1039_8_reg_2643_pp0_iter1_reg <= icmp_ln1039_8_reg_2643;
        icmp_ln1039_9_reg_2689_pp0_iter1_reg <= icmp_ln1039_9_reg_2689;
        icmp_ln1039_reg_2536_pp0_iter1_reg <= icmp_ln1039_reg_2536;
        phitmp12_reg_2653_pp0_iter1_reg <= phitmp12_reg_2653;
        phitmp13_reg_2658_pp0_iter1_reg <= phitmp13_reg_2658;
        phitmp18_reg_2602_pp0_iter1_reg <= phitmp18_reg_2602;
        phitmp19_reg_2607_pp0_iter1_reg <= phitmp19_reg_2607;
        phitmp24_reg_2551_pp0_iter1_reg <= phitmp24_reg_2551;
        phitmp25_reg_2556_pp0_iter1_reg <= phitmp25_reg_2556;
        phitmp30_reg_2500_pp0_iter1_reg <= phitmp30_reg_2500;
        phitmp31_reg_2505_pp0_iter1_reg <= phitmp31_reg_2505;
        select_ln182_1_reg_2485_pp0_iter1_reg <= select_ln182_1_reg_2485;
        tmp_21_reg_2714 <= sprite_addr_1_fu_1549_p2[32'd31];
        tmp_27_reg_2729 <= sprite_addr_2_fu_1625_p2[32'd31];
        tmp_33_reg_2744 <= sprite_addr_3_fu_1701_p2[32'd31];
        tmp_reg_2699 <= sprite_addr_fu_1473_p2[32'd31];
        trunc_ln190_reg_2490_pp0_iter1_reg <= trunc_ln190_reg_2490;
        trunc_ln221_2_reg_2739 <= {{add_ln220_18_fu_1631_p2[13:2]}};
        trunc_ln221_4_reg_2704 <= {{sub_ln221_fu_1493_p2[13:2]}};
        trunc_ln221_5_reg_2709 <= {{add_ln220_7_fu_1479_p2[13:2]}};
        trunc_ln221_6_reg_2749 <= {{sub_ln221_6_fu_1721_p2[13:2]}};
        trunc_ln221_7_reg_2719 <= {{sub_ln221_2_fu_1569_p2[13:2]}};
        trunc_ln221_8_reg_2724 <= {{add_ln220_13_fu_1555_p2[13:2]}};
        trunc_ln221_9_reg_2754 <= {{add_ln220_23_fu_1707_p2[13:2]}};
        trunc_ln221_s_reg_2734 <= {{sub_ln221_4_fu_1645_p2[13:2]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln220_12_reg_2582_pp0_iter2_reg <= add_ln220_12_reg_2582_pp0_iter1_reg;
        add_ln220_12_reg_2582_pp0_iter3_reg <= add_ln220_12_reg_2582_pp0_iter2_reg;
        add_ln220_17_reg_2633_pp0_iter2_reg <= add_ln220_17_reg_2633_pp0_iter1_reg;
        add_ln220_17_reg_2633_pp0_iter3_reg <= add_ln220_17_reg_2633_pp0_iter2_reg;
        add_ln220_22_reg_2684_pp0_iter2_reg <= add_ln220_22_reg_2684_pp0_iter1_reg;
        add_ln220_22_reg_2684_pp0_iter3_reg <= add_ln220_22_reg_2684_pp0_iter2_reg;
        add_ln220_22_reg_2684_pp0_iter4_reg <= add_ln220_22_reg_2684_pp0_iter3_reg;
        add_ln220_5_reg_2531_pp0_iter2_reg <= add_ln220_5_reg_2531_pp0_iter1_reg;
        add_ln220_5_reg_2531_pp0_iter3_reg <= add_ln220_5_reg_2531_pp0_iter2_reg;
        alpha_ch_V_11_reg_2877 <= alpha_ch_V_11_fu_2014_p3;
        alpha_ch_V_13_reg_2888 <= alpha_ch_V_13_fu_2070_p3;
        alpha_ch_V_9_reg_2827 <= alpha_ch_V_9_fu_1870_p3;
        alpha_ch_V_9_reg_2827_pp0_iter5_reg <= alpha_ch_V_9_reg_2827;
        alpha_ch_V_reg_2810 <= alpha_ch_V_fu_1822_p1;
        and_ln1023_14_reg_2893 <= and_ln1023_14_fu_2107_p2;
        and_ln1023_4_reg_2872 <= and_ln1023_4_fu_2002_p2;
        and_ln1023_9_reg_2882 <= and_ln1023_9_fu_2050_p2;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        bullet_sprite_V_load_4_reg_2800_pp0_iter4_reg <= bullet_sprite_V_load_4_reg_2800;
        icmp_ln1023_2_reg_2850 <= icmp_ln1023_2_fu_1922_p2;
        icmp_ln1023_3_reg_2867 <= icmp_ln1023_3_fu_1966_p2;
        icmp_ln1023_4_reg_2903 <= icmp_ln1023_4_fu_2215_p2;
        icmp_ln1023_reg_2833 <= icmp_ln1023_fu_1878_p2;
        icmp_ln1039_10_reg_2694_pp0_iter2_reg <= icmp_ln1039_10_reg_2694_pp0_iter1_reg;
        icmp_ln1039_10_reg_2694_pp0_iter3_reg <= icmp_ln1039_10_reg_2694_pp0_iter2_reg;
        icmp_ln1039_10_reg_2694_pp0_iter4_reg <= icmp_ln1039_10_reg_2694_pp0_iter3_reg;
        icmp_ln1039_10_reg_2694_pp0_iter5_reg <= icmp_ln1039_10_reg_2694_pp0_iter4_reg;
        icmp_ln1039_4_reg_2541_pp0_iter2_reg <= icmp_ln1039_4_reg_2541_pp0_iter1_reg;
        icmp_ln1039_4_reg_2541_pp0_iter3_reg <= icmp_ln1039_4_reg_2541_pp0_iter2_reg;
        icmp_ln1039_4_reg_2541_pp0_iter4_reg <= icmp_ln1039_4_reg_2541_pp0_iter3_reg;
        icmp_ln1039_5_reg_2587_pp0_iter2_reg <= icmp_ln1039_5_reg_2587_pp0_iter1_reg;
        icmp_ln1039_5_reg_2587_pp0_iter3_reg <= icmp_ln1039_5_reg_2587_pp0_iter2_reg;
        icmp_ln1039_5_reg_2587_pp0_iter4_reg <= icmp_ln1039_5_reg_2587_pp0_iter3_reg;
        icmp_ln1039_6_reg_2592_pp0_iter2_reg <= icmp_ln1039_6_reg_2592_pp0_iter1_reg;
        icmp_ln1039_6_reg_2592_pp0_iter3_reg <= icmp_ln1039_6_reg_2592_pp0_iter2_reg;
        icmp_ln1039_6_reg_2592_pp0_iter4_reg <= icmp_ln1039_6_reg_2592_pp0_iter3_reg;
        icmp_ln1039_7_reg_2638_pp0_iter2_reg <= icmp_ln1039_7_reg_2638_pp0_iter1_reg;
        icmp_ln1039_7_reg_2638_pp0_iter3_reg <= icmp_ln1039_7_reg_2638_pp0_iter2_reg;
        icmp_ln1039_7_reg_2638_pp0_iter4_reg <= icmp_ln1039_7_reg_2638_pp0_iter3_reg;
        icmp_ln1039_8_reg_2643_pp0_iter2_reg <= icmp_ln1039_8_reg_2643_pp0_iter1_reg;
        icmp_ln1039_8_reg_2643_pp0_iter3_reg <= icmp_ln1039_8_reg_2643_pp0_iter2_reg;
        icmp_ln1039_8_reg_2643_pp0_iter4_reg <= icmp_ln1039_8_reg_2643_pp0_iter3_reg;
        icmp_ln1039_9_reg_2689_pp0_iter2_reg <= icmp_ln1039_9_reg_2689_pp0_iter1_reg;
        icmp_ln1039_9_reg_2689_pp0_iter3_reg <= icmp_ln1039_9_reg_2689_pp0_iter2_reg;
        icmp_ln1039_9_reg_2689_pp0_iter4_reg <= icmp_ln1039_9_reg_2689_pp0_iter3_reg;
        icmp_ln1039_9_reg_2689_pp0_iter5_reg <= icmp_ln1039_9_reg_2689_pp0_iter4_reg;
        icmp_ln1039_reg_2536_pp0_iter2_reg <= icmp_ln1039_reg_2536_pp0_iter1_reg;
        icmp_ln1039_reg_2536_pp0_iter3_reg <= icmp_ln1039_reg_2536_pp0_iter2_reg;
        icmp_ln1039_reg_2536_pp0_iter4_reg <= icmp_ln1039_reg_2536_pp0_iter3_reg;
        or_ln186_1_reg_2898[7 : 0] <= or_ln186_1_fu_2197_p8[7 : 0];
or_ln186_1_reg_2898[15 : 11] <= or_ln186_1_fu_2197_p8[15 : 11];
or_ln186_1_reg_2898[23 : 19] <= or_ln186_1_fu_2197_p8[23 : 19];
or_ln186_1_reg_2898[31 : 27] <= or_ln186_1_fu_2197_p8[31 : 27];
        or_ln858_reg_2822[0] <= or_ln858_fu_1864_p2[0];
or_ln858_reg_2822[7 : 2] <= or_ln858_fu_1864_p2[7 : 2];
        phitmp12_reg_2653_pp0_iter2_reg <= phitmp12_reg_2653_pp0_iter1_reg;
        phitmp12_reg_2653_pp0_iter3_reg <= phitmp12_reg_2653_pp0_iter2_reg;
        phitmp12_reg_2653_pp0_iter4_reg <= phitmp12_reg_2653_pp0_iter3_reg;
        phitmp12_reg_2653_pp0_iter5_reg <= phitmp12_reg_2653_pp0_iter4_reg;
        phitmp13_reg_2658_pp0_iter2_reg <= phitmp13_reg_2658_pp0_iter1_reg;
        phitmp13_reg_2658_pp0_iter3_reg <= phitmp13_reg_2658_pp0_iter2_reg;
        phitmp13_reg_2658_pp0_iter4_reg <= phitmp13_reg_2658_pp0_iter3_reg;
        phitmp13_reg_2658_pp0_iter5_reg <= phitmp13_reg_2658_pp0_iter4_reg;
        phitmp18_reg_2602_pp0_iter2_reg <= phitmp18_reg_2602_pp0_iter1_reg;
        phitmp18_reg_2602_pp0_iter3_reg <= phitmp18_reg_2602_pp0_iter2_reg;
        phitmp18_reg_2602_pp0_iter4_reg <= phitmp18_reg_2602_pp0_iter3_reg;
        phitmp19_reg_2607_pp0_iter2_reg <= phitmp19_reg_2607_pp0_iter1_reg;
        phitmp19_reg_2607_pp0_iter3_reg <= phitmp19_reg_2607_pp0_iter2_reg;
        phitmp19_reg_2607_pp0_iter4_reg <= phitmp19_reg_2607_pp0_iter3_reg;
        phitmp24_reg_2551_pp0_iter2_reg <= phitmp24_reg_2551_pp0_iter1_reg;
        phitmp24_reg_2551_pp0_iter3_reg <= phitmp24_reg_2551_pp0_iter2_reg;
        phitmp24_reg_2551_pp0_iter4_reg <= phitmp24_reg_2551_pp0_iter3_reg;
        phitmp25_reg_2556_pp0_iter2_reg <= phitmp25_reg_2556_pp0_iter1_reg;
        phitmp25_reg_2556_pp0_iter3_reg <= phitmp25_reg_2556_pp0_iter2_reg;
        phitmp25_reg_2556_pp0_iter4_reg <= phitmp25_reg_2556_pp0_iter3_reg;
        phitmp30_reg_2500_pp0_iter2_reg <= phitmp30_reg_2500_pp0_iter1_reg;
        phitmp30_reg_2500_pp0_iter3_reg <= phitmp30_reg_2500_pp0_iter2_reg;
        phitmp30_reg_2500_pp0_iter4_reg <= phitmp30_reg_2500_pp0_iter3_reg;
        phitmp31_reg_2505_pp0_iter2_reg <= phitmp31_reg_2505_pp0_iter1_reg;
        phitmp31_reg_2505_pp0_iter3_reg <= phitmp31_reg_2505_pp0_iter2_reg;
        phitmp31_reg_2505_pp0_iter4_reg <= phitmp31_reg_2505_pp0_iter3_reg;
        r_V_4_reg_2838 <= r_V_4_fu_1895_p2;
        r_V_4_reg_2838_pp0_iter5_reg <= r_V_4_reg_2838;
        r_V_5_reg_2855 <= r_V_5_fu_1939_p2;
        r_V_5_reg_2855_pp0_iter5_reg <= r_V_5_reg_2855;
        r_V_reg_2815 <= r_V_fu_1837_p2;
        r_V_reg_2815_pp0_iter5_reg <= r_V_reg_2815;
        select_ln182_1_reg_2485_pp0_iter2_reg <= select_ln182_1_reg_2485_pp0_iter1_reg;
        tile_fb_V_addr_reg_2779 <= zext_ln190_fu_1817_p1;
        tile_fb_V_addr_reg_2779_pp0_iter4_reg <= tile_fb_V_addr_reg_2779;
        tile_fb_V_addr_reg_2779_pp0_iter5_reg <= tile_fb_V_addr_reg_2779_pp0_iter4_reg;
        tmp_pixel_V_6_reg_2805_pp0_iter5_reg <= tmp_pixel_V_6_reg_2805;
        trunc_ln190_reg_2490_pp0_iter2_reg <= trunc_ln190_reg_2490_pp0_iter1_reg;
        trunc_ln221_1_reg_2845 <= trunc_ln221_1_fu_1900_p1;
        trunc_ln221_3_reg_2862 <= trunc_ln221_3_fu_1944_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        bullet_sprite_V_load_2_reg_2790 <= bullet_sprite_V_q2;
        bullet_sprite_V_load_3_reg_2795 <= bullet_sprite_V_q1;
        bullet_sprite_V_load_4_reg_2800 <= bullet_sprite_V_q0;
        bullet_sprite_V_load_reg_2785 <= bullet_sprite_V_q3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        tmp_pixel_V_6_reg_2805 <= tile_fb_V_q1;
    end
end

always @ (*) begin
    if (((icmp_ln182_fu_335_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten6_load = 11'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten6_load = indvar_flatten6_fu_160;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_k_2 = 6'd0;
    end else begin
        ap_sig_allocacmp_k_2 = k_fu_156;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_l_load = 6'd0;
    end else begin
        ap_sig_allocacmp_l_load = l_fu_152;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        bullet_sprite_V_ce0 = 1'b1;
    end else begin
        bullet_sprite_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        bullet_sprite_V_ce1 = 1'b1;
    end else begin
        bullet_sprite_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        bullet_sprite_V_ce2 = 1'b1;
    end else begin
        bullet_sprite_V_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        bullet_sprite_V_ce3 = 1'b1;
    end else begin
        bullet_sprite_V_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        tile_fb_V_ce0 = 1'b1;
    end else begin
        tile_fb_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        tile_fb_V_ce1 = 1'b1;
    end else begin
        tile_fb_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        tile_fb_V_we0 = 1'b1;
    end else begin
        tile_fb_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln182_1_fu_394_p2 = (zext_ln182_fu_390_p1 + shl_ln265_2_mid2);

assign add_ln182_2_fu_364_p2 = (ap_sig_allocacmp_k_2 + 6'd1);

assign add_ln182_fu_341_p2 = (ap_sig_allocacmp_indvar_flatten6_load + 11'd1);

assign add_ln185_fu_1422_p2 = (select_ln182_fu_356_p3 + 6'd1);

assign add_ln220_10_fu_1544_p2 = (trunc_ln220_10_reg_2577 + trunc_ln220_9_fu_1529_p3);

assign add_ln220_12_fu_920_p2 = (trunc_ln220_7_fu_904_p1 + trunc_ln220_11_fu_916_p1);

assign add_ln220_13_fu_1555_p2 = ($signed(add_ln220_10_fu_1544_p2) + $signed(sext_ln220_5_fu_1541_p1));

assign add_ln220_14_fu_1612_p2 = (tmp_sprite_x_2_reg_2597 + shl_ln220_2_fu_1595_p3);

assign add_ln220_15_fu_1620_p2 = (trunc_ln220_17_reg_2628 + trunc_ln220_s_fu_1605_p3);

assign add_ln220_17_fu_1162_p2 = (trunc_ln220_14_fu_1146_p1 + trunc_ln220_18_fu_1158_p1);

assign add_ln220_18_fu_1631_p2 = ($signed(add_ln220_15_fu_1620_p2) + $signed(sext_ln220_8_fu_1617_p1));

assign add_ln220_19_fu_1688_p2 = (tmp_sprite_x_3_reg_2648 + shl_ln220_3_fu_1671_p3);

assign add_ln220_1_fu_1460_p2 = (tmp_sprite_x_reg_2495 + shl_ln4_fu_1443_p3);

assign add_ln220_20_fu_1696_p2 = (trunc_ln220_22_reg_2679 + trunc_ln220_12_fu_1681_p3);

assign add_ln220_22_fu_1404_p2 = (trunc_ln220_20_fu_1388_p1 + trunc_ln220_23_fu_1400_p1);

assign add_ln220_23_fu_1707_p2 = ($signed(add_ln220_20_fu_1696_p2) + $signed(sext_ln220_11_fu_1693_p1));

assign add_ln220_2_fu_1468_p2 = (trunc_ln220_3_reg_2526 + trunc_ln220_5_fu_1453_p3);

assign add_ln220_3_fu_892_p2 = ($signed(sext_ln220_3_fu_888_p1) + $signed(trunc_ln220_6_fu_878_p1));

assign add_ln220_5_fu_678_p2 = (trunc_ln220_1_fu_662_p1 + trunc_ln220_4_fu_674_p1);

assign add_ln220_6_fu_1134_p2 = ($signed(sext_ln220_6_fu_1130_p1) + $signed(trunc_ln220_13_fu_1120_p1));

assign add_ln220_7_fu_1479_p2 = ($signed(add_ln220_2_fu_1468_p2) + $signed(sext_ln220_2_fu_1465_p1));

assign add_ln220_8_fu_1536_p2 = (tmp_sprite_x_1_reg_2546 + shl_ln220_1_fu_1519_p3);

assign add_ln220_9_fu_1376_p2 = ($signed(sext_ln220_9_fu_1372_p1) + $signed(trunc_ln220_19_fu_1362_p1));

assign add_ln220_fu_650_p2 = ($signed(sext_ln220_fu_646_p1) + $signed(trunc_ln220_fu_636_p1));

assign add_ln5_fu_1811_p3 = {{select_ln182_1_reg_2485_pp0_iter2_reg}, {trunc_ln190_reg_2490_pp0_iter2_reg}};

assign alpha_ch_V_10_fu_2008_p3 = ((and_ln1023_4_fu_2002_p2[0:0] == 1'b1) ? alpha_ch_V_9_reg_2827 : alpha_ch_V_reg_2810);

assign alpha_ch_V_11_fu_2014_p3 = ((trunc_ln221_1_reg_2845[0:0] == 1'b1) ? or_ln858_reg_2822 : alpha_ch_V_10_fu_2008_p3);

assign alpha_ch_V_12_fu_2056_p3 = ((and_ln1023_9_fu_2050_p2[0:0] == 1'b1) ? alpha_ch_V_11_fu_2014_p3 : alpha_ch_V_10_fu_2008_p3);

assign alpha_ch_V_13_fu_2070_p3 = ((trunc_ln221_3_reg_2862[0:0] == 1'b1) ? or_ln858_1_fu_2064_p2 : alpha_ch_V_12_fu_2056_p3);

assign alpha_ch_V_14_fu_2113_p3 = ((and_ln1023_14_fu_2107_p2[0:0] == 1'b1) ? alpha_ch_V_13_fu_2070_p3 : alpha_ch_V_12_fu_2056_p3);

assign alpha_ch_V_15_fu_2159_p3 = ((trunc_ln221_10_fu_2137_p1[0:0] == 1'b1) ? or_ln858_1_fu_2064_p2 : alpha_ch_V_14_fu_2113_p3);

assign alpha_ch_V_9_fu_1870_p3 = ((trunc_ln221_fu_1842_p1[0:0] == 1'b1) ? or_ln858_fu_1864_p2 : alpha_ch_V_fu_1822_p1);

assign alpha_ch_V_fu_1822_p1 = tile_fb_V_q1[7:0];

assign and_ln1023_10_fu_2087_p2 = (phitmp19_reg_2607_pp0_iter4_reg & phitmp18_reg_2602_pp0_iter4_reg);

assign and_ln1023_11_fu_2091_p2 = (xor_ln1039_5_fu_2082_p2 & and_ln1023_10_fu_2087_p2);

assign and_ln1023_12_fu_2097_p2 = (tmp_11 & icmp_ln1023_3_reg_2867);

assign and_ln1023_13_fu_2101_p2 = (xor_ln1039_4_fu_2077_p2 & and_ln1023_12_fu_2097_p2);

assign and_ln1023_14_fu_2107_p2 = (and_ln1023_13_fu_2101_p2 & and_ln1023_11_fu_2091_p2);

assign and_ln1023_15_fu_2363_p2 = (xor_ln1039_6_fu_2353_p2 & phitmp12_reg_2653_pp0_iter5_reg);

assign and_ln1023_16_fu_2368_p2 = (tmp_12 & and_ln1023_15_fu_2363_p2);

assign and_ln1023_17_fu_2373_p2 = (phitmp13_reg_2658_pp0_iter5_reg & icmp_ln1023_4_reg_2903);

assign and_ln1023_18_fu_2377_p2 = (xor_ln1039_7_fu_2358_p2 & and_ln1023_17_fu_2373_p2);

assign and_ln1023_19_fu_2383_p2 = (and_ln1023_18_fu_2377_p2 & and_ln1023_16_fu_2368_p2);

assign and_ln1023_1_fu_1986_p2 = (xor_ln1039_1_fu_1977_p2 & and_ln1023_fu_1982_p2);

assign and_ln1023_2_fu_1992_p2 = (tmp_9 & icmp_ln1023_reg_2833);

assign and_ln1023_3_fu_1996_p2 = (xor_ln1039_fu_1972_p2 & and_ln1023_2_fu_1992_p2);

assign and_ln1023_4_fu_2002_p2 = (and_ln1023_3_fu_1996_p2 & and_ln1023_1_fu_1986_p2);

assign and_ln1023_5_fu_2030_p2 = (phitmp25_reg_2556_pp0_iter4_reg & phitmp24_reg_2551_pp0_iter4_reg);

assign and_ln1023_6_fu_2034_p2 = (xor_ln1039_3_fu_2025_p2 & and_ln1023_5_fu_2030_p2);

assign and_ln1023_7_fu_2040_p2 = (tmp_10 & icmp_ln1023_2_reg_2850);

assign and_ln1023_8_fu_2044_p2 = (xor_ln1039_2_fu_2020_p2 & and_ln1023_7_fu_2040_p2);

assign and_ln1023_9_fu_2050_p2 = (and_ln1023_8_fu_2044_p2 & and_ln1023_6_fu_2034_p2);

assign and_ln1023_fu_1982_p2 = (phitmp31_reg_2505_pp0_iter4_reg & phitmp30_reg_2500_pp0_iter4_reg);

assign and_ln1497_1_fu_1914_p3 = {{tmp_22_fu_1904_p4}, {1'd0}};

assign and_ln1497_3_fu_1958_p3 = {{tmp_28_fu_1948_p4}, {1'd0}};

assign and_ln1497_4_fu_2151_p3 = {{tmp_34_fu_2141_p4}, {1'd0}};

assign and_ln_fu_1856_p3 = {{tmp_15_fu_1846_p4}, {1'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign bullet_sprite_V_address0 = zext_ln221_3_fu_1806_p1;

assign bullet_sprite_V_address1 = zext_ln221_2_fu_1790_p1;

assign bullet_sprite_V_address2 = zext_ln221_1_fu_1774_p1;

assign bullet_sprite_V_address3 = zext_ln221_fu_1758_p1;

assign empty_49_fu_370_p1 = add_ln182_2_fu_364_p2[4:0];

assign empty_50_fu_432_p2 = (zext_ln185_fu_424_p1 + tmp_19);

assign empty_fu_323_p1 = ap_sig_allocacmp_k_2[4:0];

assign icmp_ln1023_2_fu_1922_p2 = ((and_ln1497_1_fu_1914_p3 != 16'd4612) ? 1'b1 : 1'b0);

assign icmp_ln1023_3_fu_1966_p2 = ((and_ln1497_3_fu_1958_p3 != 16'd4612) ? 1'b1 : 1'b0);

assign icmp_ln1023_4_fu_2215_p2 = ((and_ln1497_4_fu_2151_p3 != 16'd4612) ? 1'b1 : 1'b0);

assign icmp_ln1023_fu_1878_p2 = ((and_ln_fu_1856_p3 != 16'd4612) ? 1'b1 : 1'b0);

assign icmp_ln1039_10_fu_1416_p2 = ((add_ln182_1_fu_394_p2 < lhs_V_3_fu_1328_p4) ? 1'b1 : 1'b0);

assign icmp_ln1039_4_fu_690_p2 = ((add_ln182_1_fu_394_p2 < lhs_V_fu_598_p4) ? 1'b1 : 1'b0);

assign icmp_ln1039_5_fu_926_p2 = ((empty_50_fu_432_p2 < lhs_2_fu_820_p1) ? 1'b1 : 1'b0);

assign icmp_ln1039_6_fu_932_p2 = ((add_ln182_1_fu_394_p2 < lhs_V_1_fu_844_p4) ? 1'b1 : 1'b0);

assign icmp_ln1039_7_fu_1168_p2 = ((empty_50_fu_432_p2 < lhs_3_fu_1062_p1) ? 1'b1 : 1'b0);

assign icmp_ln1039_8_fu_1174_p2 = ((add_ln182_1_fu_394_p2 < lhs_V_2_fu_1086_p4) ? 1'b1 : 1'b0);

assign icmp_ln1039_9_fu_1410_p2 = ((empty_50_fu_432_p2 < lhs_4_fu_1304_p1) ? 1'b1 : 1'b0);

assign icmp_ln1039_fu_684_p2 = ((empty_50_fu_432_p2 < lhs_fu_574_p1) ? 1'b1 : 1'b0);

assign icmp_ln182_fu_335_p2 = ((ap_sig_allocacmp_indvar_flatten6_load == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln185_fu_350_p2 = ((ap_sig_allocacmp_l_load == 6'd32) ? 1'b1 : 1'b0);

assign lhs_2_fu_820_p1 = tmp_bullet_V_1[8:0];

assign lhs_3_fu_1062_p1 = tmp_bullet_V_2[8:0];

assign lhs_4_fu_1304_p1 = tmp_bullet_V_3[8:0];

assign lhs_V_1_fu_844_p4 = {{tmp_bullet_V_1[17:9]}};

assign lhs_V_2_fu_1086_p4 = {{tmp_bullet_V_2[17:9]}};

assign lhs_V_3_fu_1328_p4 = {{tmp_bullet_V_3[17:9]}};

assign lhs_V_fu_598_p4 = {{tmp_bullet_V[17:9]}};

assign lhs_fu_574_p1 = tmp_bullet_V[8:0];

assign offset_x_2_fu_898_p2 = (zext_ln1496_fu_624_p1 - zext_ln218_1_fu_870_p1);

assign offset_x_3_fu_1140_p2 = (zext_ln1496_fu_624_p1 - zext_ln218_2_fu_1112_p1);

assign offset_x_4_fu_1382_p2 = (zext_ln1496_fu_624_p1 - zext_ln218_3_fu_1354_p1);

assign offset_x_fu_656_p2 = (zext_ln1496_fu_624_p1 - zext_ln218_fu_628_p1);

assign op2_assign_2_fu_1826_p3 = {{add_ln220_5_reg_2531_pp0_iter3_reg}, {4'd0}};

assign op2_assign_4_fu_1884_p3 = {{add_ln220_12_reg_2582_pp0_iter3_reg}, {4'd0}};

assign op2_assign_6_fu_1928_p3 = {{add_ln220_17_reg_2633_pp0_iter3_reg}, {4'd0}};

assign op2_assign_8_fu_2121_p3 = {{add_ln220_22_reg_2684_pp0_iter4_reg}, {4'd0}};

assign or_ln1023_1_fu_2408_p2 = (and_ln1023_9_reg_2882 | and_ln1023_4_reg_2872);

assign or_ln1023_2_fu_2420_p2 = (select_ln1023_2_fu_2412_p3 | 32'd1);

assign or_ln1023_3_fu_2426_p2 = (or_ln1023_fu_2396_p2 | or_ln1023_1_fu_2408_p2);

assign or_ln1023_fu_2396_p2 = (and_ln1023_19_fu_2383_p2 | and_ln1023_14_reg_2893);

assign or_ln186_1_fu_2197_p8 = {{{{{{{tmp_35_fu_2167_p4}, {3'd0}}, {tmp_36_fu_2177_p4}}, {3'd0}}, {tmp_37_fu_2187_p4}}, {3'd0}}, {alpha_ch_V_15_fu_2159_p3}};

assign or_ln186_2_fu_2248_p8 = {{{{{{{tmp_16_fu_2221_p4}, {3'd0}}, {tmp_17_fu_2230_p4}}, {3'd0}}, {tmp_18_fu_2239_p4}}, {3'd0}}, {alpha_ch_V_9_reg_2827_pp0_iter5_reg}};

assign or_ln186_7_fu_2336_p8 = {{{{{{{tmp_30_fu_2309_p4}, {3'd0}}, {tmp_31_fu_2318_p4}}, {3'd0}}, {tmp_32_fu_2327_p4}}, {3'd0}}, {alpha_ch_V_13_reg_2888}};

assign or_ln186_s_fu_2292_p8 = {{{{{{{tmp_23_fu_2265_p4}, {3'd0}}, {tmp_24_fu_2274_p4}}, {3'd0}}, {tmp_25_fu_2283_p4}}, {3'd0}}, {alpha_ch_V_11_reg_2877}};

assign or_ln858_1_fu_2064_p2 = (8'd2 | alpha_ch_V_12_fu_2056_p3);

assign or_ln858_fu_1864_p2 = (8'd2 | alpha_ch_V_fu_1822_p1);

assign phitmp12_fu_1322_p2 = ((ret_V_15_fu_1316_p2 > zext_ln196_fu_446_p1) ? 1'b1 : 1'b0);

assign phitmp13_fu_1348_p2 = ((ret_V_16_fu_1342_p2 > zext_ln182_1_fu_416_p1) ? 1'b1 : 1'b0);

assign phitmp18_fu_1080_p2 = ((ret_V_13_fu_1074_p2 > zext_ln196_fu_446_p1) ? 1'b1 : 1'b0);

assign phitmp19_fu_1106_p2 = ((ret_V_14_fu_1100_p2 > zext_ln182_1_fu_416_p1) ? 1'b1 : 1'b0);

assign phitmp24_fu_838_p2 = ((ret_V_11_fu_832_p2 > zext_ln196_fu_446_p1) ? 1'b1 : 1'b0);

assign phitmp25_fu_864_p2 = ((ret_V_12_fu_858_p2 > zext_ln182_1_fu_416_p1) ? 1'b1 : 1'b0);

assign phitmp30_fu_592_p2 = ((ret_V_fu_586_p2 > zext_ln196_fu_446_p1) ? 1'b1 : 1'b0);

assign phitmp31_fu_618_p2 = ((ret_V_5_fu_612_p2 > zext_ln182_1_fu_416_p1) ? 1'b1 : 1'b0);

assign r_V_4_fu_1895_p2 = bullet_sprite_V_load_2_reg_2790 >> zext_ln1669_2_fu_1891_p1;

assign r_V_5_fu_1939_p2 = bullet_sprite_V_load_3_reg_2795 >> zext_ln1669_3_fu_1935_p1;

assign r_V_6_fu_2132_p2 = bullet_sprite_V_load_4_reg_2800_pp0_iter4_reg >> zext_ln1669_4_fu_2128_p1;

assign r_V_fu_1837_p2 = bullet_sprite_V_load_reg_2785 >> zext_ln1669_fu_1833_p1;

assign ret_V_11_fu_832_p2 = (zext_ln186_4_fu_828_p1 + zext_ln186_3_fu_824_p1);

assign ret_V_12_fu_858_p2 = (zext_ln186_4_fu_828_p1 + zext_ln186_5_fu_854_p1);

assign ret_V_13_fu_1074_p2 = (zext_ln186_7_fu_1070_p1 + zext_ln186_6_fu_1066_p1);

assign ret_V_14_fu_1100_p2 = (zext_ln186_7_fu_1070_p1 + zext_ln186_8_fu_1096_p1);

assign ret_V_15_fu_1316_p2 = (zext_ln186_10_fu_1312_p1 + zext_ln186_9_fu_1308_p1);

assign ret_V_16_fu_1342_p2 = (zext_ln186_10_fu_1312_p1 + zext_ln186_11_fu_1338_p1);

assign ret_V_5_fu_612_p2 = (zext_ln186_1_fu_582_p1 + zext_ln186_2_fu_608_p1);

assign ret_V_fu_586_p2 = (zext_ln186_1_fu_582_p1 + zext_ln186_fu_578_p1);

assign select_ln1023_1_fu_2401_p3 = ((and_ln1023_9_reg_2882[0:0] == 1'b1) ? or_ln186_s_fu_2292_p8 : or_ln186_2_fu_2248_p8);

assign select_ln1023_2_fu_2412_p3 = ((or_ln1023_fu_2396_p2[0:0] == 1'b1) ? select_ln1023_fu_2389_p3 : select_ln1023_1_fu_2401_p3);

assign select_ln1023_fu_2389_p3 = ((and_ln1023_19_fu_2383_p2[0:0] == 1'b1) ? or_ln186_1_reg_2898 : or_ln186_7_fu_2336_p8);

assign select_ln182_1_fu_374_p3 = ((icmp_ln185_fu_350_p2[0:0] == 1'b1) ? empty_49_fu_370_p1 : empty_fu_323_p1);

assign select_ln182_2_fu_382_p3 = ((icmp_ln185_fu_350_p2[0:0] == 1'b1) ? add_ln182_2_fu_364_p2 : ap_sig_allocacmp_k_2);

assign select_ln182_3_fu_408_p3 = ((icmp_ln185_fu_350_p2[0:0] == 1'b1) ? tmp_15_mid1_fu_400_p3 : tmp_s_fu_327_p3);

assign select_ln182_fu_356_p3 = ((icmp_ln185_fu_350_p2[0:0] == 1'b1) ? 6'd0 : ap_sig_allocacmp_l_load);

assign select_ln221_1_fu_1768_p3 = ((tmp_21_reg_2714[0:0] == 1'b1) ? sub_ln221_3_fu_1763_p2 : trunc_ln221_8_reg_2724);

assign select_ln221_2_fu_1784_p3 = ((tmp_27_reg_2729[0:0] == 1'b1) ? sub_ln221_5_fu_1779_p2 : trunc_ln221_2_reg_2739);

assign select_ln221_3_fu_1800_p3 = ((tmp_33_reg_2744[0:0] == 1'b1) ? sub_ln221_7_fu_1795_p2 : trunc_ln221_9_reg_2754);

assign select_ln221_fu_1752_p3 = ((tmp_reg_2699[0:0] == 1'b1) ? sub_ln221_1_fu_1747_p2 : trunc_ln221_5_reg_2709);

assign sext_ln220_10_fu_1678_p1 = offset_x_4_reg_2668;

assign sext_ln220_11_fu_1693_p1 = offset_x_4_reg_2668;

assign sext_ln220_1_fu_1450_p1 = offset_x_reg_2515;

assign sext_ln220_2_fu_1465_p1 = offset_x_reg_2515;

assign sext_ln220_3_fu_888_p1 = $signed(sub_ln220_1_fu_882_p2);

assign sext_ln220_4_fu_1526_p1 = offset_x_2_reg_2566;

assign sext_ln220_5_fu_1541_p1 = offset_x_2_reg_2566;

assign sext_ln220_6_fu_1130_p1 = $signed(sub_ln220_2_fu_1124_p2);

assign sext_ln220_7_fu_1602_p1 = offset_x_3_reg_2617;

assign sext_ln220_8_fu_1617_p1 = offset_x_3_reg_2617;

assign sext_ln220_9_fu_1372_p1 = $signed(sub_ln220_3_fu_1366_p2);

assign sext_ln220_fu_646_p1 = $signed(sub_ln220_fu_640_p2);

assign shl_ln220_1_fu_1519_p3 = {{add_ln220_3_reg_2561}, {7'd0}};

assign shl_ln220_2_fu_1595_p3 = {{add_ln220_6_reg_2612}, {7'd0}};

assign shl_ln220_3_fu_1671_p3 = {{add_ln220_9_reg_2663}, {7'd0}};

assign shl_ln4_fu_1443_p3 = {{add_ln220_reg_2510}, {7'd0}};

assign sprite_addr_1_fu_1549_p2 = ($signed(add_ln220_8_fu_1536_p2) + $signed(sext_ln220_4_fu_1526_p1));

assign sprite_addr_2_fu_1625_p2 = ($signed(add_ln220_14_fu_1612_p2) + $signed(sext_ln220_7_fu_1602_p1));

assign sprite_addr_3_fu_1701_p2 = ($signed(add_ln220_19_fu_1688_p2) + $signed(sext_ln220_10_fu_1678_p1));

assign sprite_addr_fu_1473_p2 = ($signed(add_ln220_1_fu_1460_p2) + $signed(sext_ln220_1_fu_1450_p1));

assign sub_ln220_1_fu_882_p2 = (zext_ln182_2_fu_420_p1 - zext_ln220_1_fu_874_p1);

assign sub_ln220_2_fu_1124_p2 = (zext_ln182_2_fu_420_p1 - zext_ln220_2_fu_1116_p1);

assign sub_ln220_3_fu_1366_p2 = (zext_ln182_2_fu_420_p1 - zext_ln220_3_fu_1358_p1);

assign sub_ln220_fu_640_p2 = (zext_ln182_2_fu_420_p1 - zext_ln220_fu_632_p1);

assign sub_ln221_1_fu_1747_p2 = (12'd0 - trunc_ln221_4_reg_2704);

assign sub_ln221_2_fu_1569_p2 = (14'd0 - add_ln220_13_fu_1555_p2);

assign sub_ln221_3_fu_1763_p2 = (12'd0 - trunc_ln221_7_reg_2719);

assign sub_ln221_4_fu_1645_p2 = (14'd0 - add_ln220_18_fu_1631_p2);

assign sub_ln221_5_fu_1779_p2 = (12'd0 - trunc_ln221_s_reg_2734);

assign sub_ln221_6_fu_1721_p2 = (14'd0 - add_ln220_23_fu_1707_p2);

assign sub_ln221_7_fu_1795_p2 = (12'd0 - trunc_ln221_6_reg_2749);

assign sub_ln221_fu_1493_p2 = (14'd0 - add_ln220_7_fu_1479_p2);

assign tile_fb_V_address0 = tile_fb_V_addr_reg_2779_pp0_iter5_reg;

assign tile_fb_V_address1 = zext_ln190_fu_1817_p1;

assign tile_fb_V_d0 = ((or_ln1023_3_fu_2426_p2[0:0] == 1'b1) ? or_ln1023_2_fu_2420_p2 : tmp_pixel_V_6_reg_2805_pp0_iter5_reg);

assign tmp_13_fu_438_p3 = {{select_ln166}, {trunc_ln190_fu_428_p1}};

assign tmp_15_fu_1846_p4 = {{r_V_fu_1837_p2[15:1]}};

assign tmp_15_mid1_fu_400_p3 = {{select_ln166_1}, {empty_49_fu_370_p1}};

assign tmp_16_fu_2221_p4 = {{r_V_reg_2815_pp0_iter5_reg[15:11]}};

assign tmp_17_fu_2230_p4 = {{r_V_reg_2815_pp0_iter5_reg[10:6]}};

assign tmp_18_fu_2239_p4 = {{r_V_reg_2815_pp0_iter5_reg[5:1]}};

assign tmp_22_fu_1904_p4 = {{r_V_4_fu_1895_p2[15:1]}};

assign tmp_23_fu_2265_p4 = {{r_V_4_reg_2838_pp0_iter5_reg[15:11]}};

assign tmp_24_fu_2274_p4 = {{r_V_4_reg_2838_pp0_iter5_reg[10:6]}};

assign tmp_25_fu_2283_p4 = {{r_V_4_reg_2838_pp0_iter5_reg[5:1]}};

assign tmp_28_fu_1948_p4 = {{r_V_5_fu_1939_p2[15:1]}};

assign tmp_30_fu_2309_p4 = {{r_V_5_reg_2855_pp0_iter5_reg[15:11]}};

assign tmp_31_fu_2318_p4 = {{r_V_5_reg_2855_pp0_iter5_reg[10:6]}};

assign tmp_32_fu_2327_p4 = {{r_V_5_reg_2855_pp0_iter5_reg[5:1]}};

assign tmp_34_fu_2141_p4 = {{r_V_6_fu_2132_p2[15:1]}};

assign tmp_35_fu_2167_p4 = {{r_V_6_fu_2132_p2[15:11]}};

assign tmp_36_fu_2177_p4 = {{r_V_6_fu_2132_p2[10:6]}};

assign tmp_37_fu_2187_p4 = {{r_V_6_fu_2132_p2[5:1]}};

assign tmp_s_fu_327_p3 = {{select_ln166_1}, {empty_fu_323_p1}};

assign tmp_sprite_width_1_fu_706_p17 = {{tmp_bullet_V_1[30:27]}};

assign tmp_sprite_width_2_fu_948_p17 = {{tmp_bullet_V_2[30:27]}};

assign tmp_sprite_width_3_fu_1190_p17 = {{tmp_bullet_V_3[30:27]}};

assign tmp_sprite_width_fu_460_p17 = {{tmp_bullet_V[30:27]}};

assign tmp_sprite_x_1_fu_744_p17 = {{tmp_bullet_V_1[30:27]}};

assign tmp_sprite_x_2_fu_986_p17 = {{tmp_bullet_V_2[30:27]}};

assign tmp_sprite_x_3_fu_1228_p17 = {{tmp_bullet_V_3[30:27]}};

assign tmp_sprite_x_fu_498_p17 = {{tmp_bullet_V[30:27]}};

assign tmp_sprite_y_1_fu_782_p17 = {{tmp_bullet_V_1[30:27]}};

assign tmp_sprite_y_2_fu_1024_p17 = {{tmp_bullet_V_2[30:27]}};

assign tmp_sprite_y_3_fu_1266_p17 = {{tmp_bullet_V_3[30:27]}};

assign tmp_sprite_y_fu_536_p17 = {{tmp_bullet_V[30:27]}};

assign trunc_ln190_fu_428_p1 = select_ln182_fu_356_p3[4:0];

assign trunc_ln220_10_fu_912_p1 = tmp_sprite_x_1_fu_744_p18[13:0];

assign trunc_ln220_11_fu_916_p1 = offset_x_2_fu_898_p2[1:0];

assign trunc_ln220_12_fu_1681_p3 = {{trunc_ln220_21_reg_2674}, {7'd0}};

assign trunc_ln220_13_fu_1120_p1 = tmp_sprite_y_2_fu_1024_p18[24:0];

assign trunc_ln220_14_fu_1146_p1 = tmp_sprite_x_2_fu_986_p18[1:0];

assign trunc_ln220_15_fu_1150_p1 = add_ln220_6_fu_1134_p2[6:0];

assign trunc_ln220_17_fu_1154_p1 = tmp_sprite_x_2_fu_986_p18[13:0];

assign trunc_ln220_18_fu_1158_p1 = offset_x_3_fu_1140_p2[1:0];

assign trunc_ln220_19_fu_1362_p1 = tmp_sprite_y_3_fu_1266_p18[24:0];

assign trunc_ln220_1_fu_662_p1 = tmp_sprite_x_fu_498_p18[1:0];

assign trunc_ln220_20_fu_1388_p1 = tmp_sprite_x_3_fu_1228_p18[1:0];

assign trunc_ln220_21_fu_1392_p1 = add_ln220_9_fu_1376_p2[6:0];

assign trunc_ln220_22_fu_1396_p1 = tmp_sprite_x_3_fu_1228_p18[13:0];

assign trunc_ln220_23_fu_1400_p1 = offset_x_4_fu_1382_p2[1:0];

assign trunc_ln220_2_fu_666_p1 = add_ln220_fu_650_p2[6:0];

assign trunc_ln220_3_fu_670_p1 = tmp_sprite_x_fu_498_p18[13:0];

assign trunc_ln220_4_fu_674_p1 = offset_x_fu_656_p2[1:0];

assign trunc_ln220_5_fu_1453_p3 = {{trunc_ln220_2_reg_2521}, {7'd0}};

assign trunc_ln220_6_fu_878_p1 = tmp_sprite_y_1_fu_782_p18[24:0];

assign trunc_ln220_7_fu_904_p1 = tmp_sprite_x_1_fu_744_p18[1:0];

assign trunc_ln220_8_fu_908_p1 = add_ln220_3_fu_892_p2[6:0];

assign trunc_ln220_9_fu_1529_p3 = {{trunc_ln220_8_reg_2572}, {7'd0}};

assign trunc_ln220_fu_636_p1 = tmp_sprite_y_fu_536_p18[24:0];

assign trunc_ln220_s_fu_1605_p3 = {{trunc_ln220_15_reg_2623}, {7'd0}};

assign trunc_ln221_10_fu_2137_p1 = r_V_6_fu_2132_p2[0:0];

assign trunc_ln221_1_fu_1900_p1 = r_V_4_fu_1895_p2[0:0];

assign trunc_ln221_3_fu_1944_p1 = r_V_5_fu_1939_p2[0:0];

assign trunc_ln221_fu_1842_p1 = r_V_fu_1837_p2[0:0];

assign xor_ln1039_1_fu_1977_p2 = (icmp_ln1039_4_reg_2541_pp0_iter4_reg ^ 1'd1);

assign xor_ln1039_2_fu_2020_p2 = (icmp_ln1039_5_reg_2587_pp0_iter4_reg ^ 1'd1);

assign xor_ln1039_3_fu_2025_p2 = (icmp_ln1039_6_reg_2592_pp0_iter4_reg ^ 1'd1);

assign xor_ln1039_4_fu_2077_p2 = (icmp_ln1039_7_reg_2638_pp0_iter4_reg ^ 1'd1);

assign xor_ln1039_5_fu_2082_p2 = (icmp_ln1039_8_reg_2643_pp0_iter4_reg ^ 1'd1);

assign xor_ln1039_6_fu_2353_p2 = (icmp_ln1039_9_reg_2689_pp0_iter5_reg ^ 1'd1);

assign xor_ln1039_7_fu_2358_p2 = (icmp_ln1039_10_reg_2694_pp0_iter5_reg ^ 1'd1);

assign xor_ln1039_fu_1972_p2 = (icmp_ln1039_reg_2536_pp0_iter4_reg ^ 1'd1);

assign zext_ln1496_fu_624_p1 = tmp_13_fu_438_p3;

assign zext_ln1669_2_fu_1891_p1 = op2_assign_4_fu_1884_p3;

assign zext_ln1669_3_fu_1935_p1 = op2_assign_6_fu_1928_p3;

assign zext_ln1669_4_fu_2128_p1 = op2_assign_8_fu_2121_p3;

assign zext_ln1669_fu_1833_p1 = op2_assign_2_fu_1826_p3;

assign zext_ln182_1_fu_416_p1 = select_ln182_3_fu_408_p3;

assign zext_ln182_2_fu_420_p1 = select_ln182_3_fu_408_p3;

assign zext_ln182_fu_390_p1 = select_ln182_2_fu_382_p3;

assign zext_ln185_fu_424_p1 = select_ln182_fu_356_p3;

assign zext_ln186_10_fu_1312_p1 = tmp_sprite_width_3_fu_1190_p18;

assign zext_ln186_11_fu_1338_p1 = lhs_V_3_fu_1328_p4;

assign zext_ln186_1_fu_582_p1 = tmp_sprite_width_fu_460_p18;

assign zext_ln186_2_fu_608_p1 = lhs_V_fu_598_p4;

assign zext_ln186_3_fu_824_p1 = lhs_2_fu_820_p1;

assign zext_ln186_4_fu_828_p1 = tmp_sprite_width_1_fu_706_p18;

assign zext_ln186_5_fu_854_p1 = lhs_V_1_fu_844_p4;

assign zext_ln186_6_fu_1066_p1 = lhs_3_fu_1062_p1;

assign zext_ln186_7_fu_1070_p1 = tmp_sprite_width_2_fu_948_p18;

assign zext_ln186_8_fu_1096_p1 = lhs_V_2_fu_1086_p4;

assign zext_ln186_9_fu_1308_p1 = lhs_4_fu_1304_p1;

assign zext_ln186_fu_578_p1 = lhs_fu_574_p1;

assign zext_ln190_fu_1817_p1 = add_ln5_fu_1811_p3;

assign zext_ln196_fu_446_p1 = tmp_13_fu_438_p3;

assign zext_ln218_1_fu_870_p1 = lhs_2_fu_820_p1;

assign zext_ln218_2_fu_1112_p1 = lhs_3_fu_1062_p1;

assign zext_ln218_3_fu_1354_p1 = lhs_4_fu_1304_p1;

assign zext_ln218_fu_628_p1 = lhs_fu_574_p1;

assign zext_ln220_1_fu_874_p1 = lhs_V_1_fu_844_p4;

assign zext_ln220_2_fu_1116_p1 = lhs_V_2_fu_1086_p4;

assign zext_ln220_3_fu_1358_p1 = lhs_V_3_fu_1328_p4;

assign zext_ln220_fu_632_p1 = lhs_V_fu_598_p4;

assign zext_ln221_1_fu_1774_p1 = select_ln221_1_fu_1768_p3;

assign zext_ln221_2_fu_1790_p1 = select_ln221_2_fu_1784_p3;

assign zext_ln221_3_fu_1806_p1 = select_ln221_3_fu_1800_p3;

assign zext_ln221_fu_1758_p1 = select_ln221_fu_1752_p3;

always @ (posedge ap_clk) begin
    or_ln858_reg_2822[1] <= 1'b1;
    or_ln186_1_reg_2898[10:8] <= 3'b000;
    or_ln186_1_reg_2898[18:16] <= 3'b000;
    or_ln186_1_reg_2898[26:24] <= 3'b000;
end

endmodule //render_2d_render_2d_Pipeline_render_enemy_bullets_render_enemy_bullets_x
